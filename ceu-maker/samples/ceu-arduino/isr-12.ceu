/* TODO: only working with original Arduino */

native/pre do
    //##define CEU_FEATURES_ISR_SLEEP
end

#include "arduino/isr/timer.ceu"
#include "arduino/isr/usart.ceu"
#include "arduino/isr/pin-02.ceu"

var& IUsart usart;
var[20] byte rx = [];
var& Usart usart = spawn Usart(9600, &rx);

output bool PIN_13;

// heavy loop to evaluate ISR responsiveness
#if 0
spawn do
    await async     // comment to freeze synchronous code in tight loop
    do
        var int v = 0;
        loop do
            v = 1 - v;
            _digitalWrite(13,v);
            //emit PIN_13(v);
            DELAY(1000);
        end
    end
end
#endif

watching PIN_02 do
    loop do
        par/and do
            await 1s;
        with
            var[20] byte str = [].."Hello World!\n";
            await Usart_TX(&usart.usart,&str);
        end
    end
end

await 1s;

watching PIN_02 do
    loop do
        if $rx == 0 then
            await usart.usart.ok_rx;
        end
        var[20] byte tx;
        atomic do
            tx = []..rx;
            rx = [];
        end
        await Usart_TX(&usart.usart,&tx);
    end
end

// should tx up to 1-5\n
watching 8ms do
    var[20] byte str = [].."12345\n67890";
    await Usart_TX(&usart.usart, &str);
end

// print both in sequence
var[20] byte str = [].."Hello World!\n";
par/and do
    await Usart_TX(&usart.usart, &str);
with
    await Usart_TX(&usart.usart, &str);
end

var[20] byte str = [].."ok!\n";
await Usart_TX(&usart.usart, &str);

await FOREVER;
